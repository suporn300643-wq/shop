<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>เว็บไซต์สั่งสินค้า</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts: Inter -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Sarabun:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Custom styles */
        body {
            font-family: 'Sarabun', sans-serif;
        }
        /* Style for modals to ensure they are scrollable on small screens */
        .modal-content {
            max-height: 90vh;
            overflow-y: auto;
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <!-- Header Section -->
    <header class="bg-white shadow-sm sticky top-0 z-40">
        <nav class="container mx-auto px-4 py-4 flex justify-between items-center">
            <div class="text-2xl font-bold text-indigo-600">
                Happy Shop
            </div>
            <div class="flex items-center gap-4">
                <button id="login-button" class="px-4 py-2 rounded-lg bg-gray-200 text-gray-800 shadow-md hover:bg-gray-300 transition-colors">
                    เข้าสู่ระบบ
                </button>
                <button id="logout-button" class="hidden px-4 py-2 rounded-lg bg-red-500 text-white shadow-md hover:bg-red-600 transition-colors">
                    ออกจากระบบ
                </button>
                <button id="cart-button" class="relative px-4 py-2 rounded-lg bg-indigo-600 text-white shadow-md hover:bg-indigo-700 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.182 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                    <span class="ml-2">ตะกร้าสินค้า</span>
                    <span id="cart-count" class="hidden absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center">0</span>
                </button>
            </div>
        </nav>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-center mb-8">สินค้าทั้งหมด</h1>
        
        <!-- Admin Panel (hidden by default) -->
        <div id="admin-panel" class="hidden mb-8 p-6 bg-white rounded-xl shadow-md">
            <!-- Product Management -->
            <h2 class="text-2xl font-bold mb-4">จัดการสินค้า</h2>
            <form id="product-form" class="flex flex-col sm:flex-row gap-4 mb-4">
                <input type="hidden" id="product-id" name="id">
                <input type="text" id="product-name" name="name" placeholder="ชื่อสินค้า" class="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                <input type="number" id="product-price" name="price" placeholder="ราคา" class="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                <input type="text" id="product-sizes" name="sizes" placeholder="ขนาด (เช่น: S,M,L)" class="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
                <input type="text" id="product-image" name="image" placeholder="URL รูปภาพ (ไม่บังคับ)" class="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
                <button type="submit" class="bg-indigo-500 text-white py-2 px-4 rounded-lg font-bold shadow-md hover:bg-indigo-600 transition-colors">เพิ่มสินค้า</button>
                <button type="button" id="cancel-edit-btn" class="hidden bg-gray-400 text-white py-2 px-4 rounded-lg font-bold shadow-md hover:bg-gray-500 transition-colors">ยกเลิก</button>
            </form>
            <h3 class="text-xl font-semibold mt-6 mb-2">ลบ/แก้ไขสินค้า</h3>
            <ul id="product-list-admin" class="divide-y divide-gray-200 rounded-lg border border-gray-200"></ul>

            <!-- Fee Management -->
            <h2 class="text-2xl font-bold mt-8 mb-4">จัดการค่าบริการ</h2>
            <form id="fee-form" class="flex flex-col sm:flex-row gap-4 mb-4">
              <input type="text" name="name" placeholder="ชื่อค่าบริการ" class="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
              <input type="number" name="price" placeholder="ราคา" class="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
              <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded-lg font-bold shadow-md hover:bg-green-600 transition-colors">เพิ่มค่าบริการ</button>
            </form>
            <ul id="fee-list-admin" class="divide-y divide-gray-200 rounded-lg border border-gray-200"></ul>

            <!-- Payment Management -->
            <h2 class="text-2xl font-bold mt-8 mb-4">จัดการการชำระเงิน</h2>
            <form id="payment-method-form" class="flex flex-col sm:flex-row gap-4 mb-4">
              <input type="text" name="name" placeholder="ชื่อธนาคาร / วิธีชำระเงิน" class="flex-1 p-2 border border-gray-300 rounded-lg" required>
              <input type="text" name="accountNumber" placeholder="เลขบัญชี (ไม่บังคับ)" class="flex-1 p-2 border border-gray-300 rounded-lg">
              <input type="text" name="qrCodeUrl" placeholder="URL รูปภาพ QR Code (ไม่บังคับ)" class="flex-1 p-2 border border-gray-300 rounded-lg">
              <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded-lg font-bold shadow-md hover:bg-blue-600">เพิ่มบัญชี</button>
            </form>
            <ul id="payment-method-list-admin" class="divide-y divide-gray-200 rounded-lg border border-gray-200"></ul>
        </div>
  
        <!-- Product Grid -->
        <div id="product-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            <!-- Products will be injected here by JavaScript -->
        </div>
    </main>

    <!-- Modals -->
    <!-- Login Modal -->
    <div id="login-modal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50">
        <div class="bg-white p-8 rounded-xl shadow-lg max-w-sm w-full mx-4">
          <div class="flex justify-between items-center mb-4">
            <h2 class="text-2xl font-bold">เข้าสู่ระบบ</h2>
            <button class="close-modal-btn text-gray-500 hover:text-gray-800 text-3xl font-bold">&times;</button>
          </div>
          <form id="login-form" class="flex flex-col gap-4">
            <input type="text" id="username" placeholder="ชื่อผู้ใช้" class="p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
            <input type="password" id="password" placeholder="รหัสผ่าน" class="p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
            <p id="login-error" class="text-red-500 text-center"></p>
            <button type="submit" class="bg-indigo-500 text-white py-3 rounded-lg font-bold shadow-md hover:bg-indigo-600 transition-colors">เข้าสู่ระบบ</button>
          </form>
        </div>
    </div>
    
    <!-- Size & Quantity Modal -->
    <div id="size-modal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50">
        <div class="bg-white p-8 rounded-xl shadow-lg max-w-sm w-full mx-4">
            <div class="flex justify-between items-center mb-4">
                <h2 id="size-modal-title" class="text-2xl font-bold">เลือกขนาด</h2>
                <button class="close-modal-btn text-gray-500 hover:text-gray-800 text-3xl font-bold">&times;</button>
            </div>
            <div class="mb-6">
                <h3 class="font-semibold mb-2">ขนาด</h3>
                <div id="size-options" class="grid grid-cols-3 gap-4"></div>
            </div>
            <div class="mb-6">
                <h3 class="font-semibold mb-2">จำนวน</h3>
                <input type="number" min="1" value="1" id="size-modal-quantity" class="w-full p-3 border border-gray-300 rounded-lg text-center">
            </div>
            <button id="confirm-add-to-cart-btn" class="w-full bg-indigo-500 text-white py-3 rounded-lg font-bold shadow-md hover:bg-indigo-600 transition-colors disabled:opacity-50" disabled>
                ยืนยันและเพิ่มลงตะกร้า
            </button>
        </div>
    </div>

    <!-- Shopping Cart Modal -->
    <div id="cart-modal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 max-w-lg w-full mx-4 shadow-xl modal-content">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-bold">ตะกร้าสินค้า</h2>
                <button class="close-modal-btn text-gray-500 hover:text-gray-800 text-3xl font-bold">&times;</button>
            </div>
            <div id="cart-content">
                <!-- Cart items will be injected here -->
            </div>
            <div class="mt-6 flex justify-end">
                <button class="close-modal-btn bg-gray-300 text-gray-800 py-2 px-4 rounded-lg font-bold hover:bg-gray-400 mr-2">
                    เลือกซื้อสินค้าต่อ
                </button>
                <button id="checkout-btn" class="bg-green-500 text-white py-2 px-4 rounded-lg font-bold hover:bg-green-600 disabled:opacity-50">
                    ชำระเงิน
                </button>
            </div>
        </div>
    </div>

    <!-- JavaScript Logic -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- STATE MANAGEMENT ---
            let products = [
                { id: 1, name: "เสื้อยืดสไตล์มินิมอล", price: 299, image: "https://placehold.co/400x300/a855f7/ffffff?text=Product+1", sizes: "S,M,L,XL" },
                { id: 2, name: "กางเกงยีนส์ขาตรง", price: 850, image: "https://placehold.co/400x300/ec4899/ffffff?text=Product+2", sizes: "28,30,32,34" },
                { id: 3, name: "รองเท้าผ้าใบสีขาว", price: 1200, image: "https://placehold.co/400x300/22d3ee/ffffff?text=Product+3", sizes: "38,39,40,41,42" },
                { id: 4, name: "กระเป๋าสะพายข้าง", price: 590, image: "https://placehold.co/400x300/6366f1/ffffff?text=Product+4", sizes: "One Size" },
                { id: 5, name: "หมวกแก๊ปเรียบๆ", price: 150, image: "https://placehold.co/400x300/f59e0b/ffffff?text=Product+5", sizes: "One Size" },
                { id: 6, name: "แว่นตากันแดด", price: 350, image: "https://placehold.co/400x300/4ade80/ffffff?text=Product+6", sizes: "One Size" },
            ];
            let fees = [
                { id: 1, name: "ค่าจัดส่ง", price: 50 },
                { id: 2, name: "ค่าธรรมเนียมการชำระเงิน", price: 20 },
            ];
            let paymentMethods = [
                { id: 1, type: "bank", name: "กสิกรไทย", accountNumber: "123-4-56789-0", qrCodeUrl: "https://placehold.co/300x300/008000/ffffff?text=QR+Code+KBank" },
            ];
            let cart = [];
            let isLoggedIn = false;
            let editingProductId = null;
            let currentProductForSizeSelection = null;
            let selectedSizeForModal = null;

            // --- GOOGLE APPS SCRIPT CONFIG ---
            const GOOGLE_APPS_SCRIPT_URL = "https://script.google.com/macros/s/AKfycby4SAqqhDzjCKev-BkphRkSLn1YMm9zgPlfvTRh4m6tRXdxZ8KT1uE4_OFu7nCuTwtvfA/exec";

            // --- DOM ELEMENTS ---
            const productGrid = document.getElementById('product-grid');
            const cartButton = document.getElementById('cart-button');
            const cartCount = document.getElementById('cart-count');
            const loginButton = document.getElementById('login-button');
            const logoutButton = document.getElementById('logout-button');
            const adminPanel = document.getElementById('admin-panel');
            // Modals
            const loginModal = document.getElementById('login-modal');
            const sizeModal = document.getElementById('size-modal');
            const cartModal = document.getElementById('cart-modal');
            const modals = [loginModal, sizeModal, cartModal];
            // Forms
            const loginForm = document.getElementById('login-form');
            const productForm = document.getElementById('product-form');
            const feeForm = document.getElementById('fee-form');
            const paymentMethodForm = document.getElementById('payment-method-form');
            // Admin lists
            const adminProductList = document.getElementById('product-list-admin');
            const adminFeeList = document.getElementById('fee-list-admin');
            const adminPaymentList = document.getElementById('payment-method-list-admin');

            // --- RENDER FUNCTIONS ---
            const renderProducts = () => {
                productGrid.innerHTML = '';
                products.forEach(product => {
                    const productCard = document.createElement('div');
                    productCard.className = "bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow overflow-hidden";
                    productCard.innerHTML = `
                        <img src="${product.image}" alt="${product.name}" class="w-full h-56 object-cover">
                        <div class="p-6">
                            <h2 class="text-xl font-semibold mb-2">${product.name}</h2>
                            <p class="text-gray-600 mb-4">ราคา: ${product.price} บาท</p>
                            <button data-product-id="${product.id}" class="add-to-cart-btn w-full bg-indigo-500 text-white py-2 rounded-lg font-bold shadow-md hover:bg-indigo-600 transition-colors">
                                ${product.sizes !== 'One Size' ? 'เลือกขนาด' : 'เพิ่มลงตะกร้า'}
                            </button>
                        </div>
                    `;
                    productGrid.appendChild(productCard);
                });
            };

            const renderCart = () => {
                const cartContent = document.getElementById('cart-content');
                if (cart.length === 0) {
                    cartContent.innerHTML = `<p class="text-center text-gray-500">ยังไม่มีสินค้าในตะกร้า</p>`;
                    document.getElementById('checkout-btn').disabled = true;
                    return;
                }
                
                document.getElementById('checkout-btn').disabled = false;
                
                const productTotal = cart.reduce((total, item) => total + item.price * item.quantity, 0);
                const feesTotal = fees.reduce((total, fee) => total + fee.price, 0);
                const grandTotal = productTotal + feesTotal;

                const itemsHTML = cart.map(item => `
                    <li class="py-4 flex items-center justify-between">
                        <div class="flex items-center gap-4">
                            <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded-lg"/>
                            <div>
                                <p class="font-semibold">${item.name}</p>
                                <p class="text-sm text-gray-500">ขนาด: ${item.selectedSize}</p>
                                <p class="text-sm text-gray-500">ราคาต่อหน่วย: ${item.price} บาท</p>
                                <div class="flex items-center mt-2">
                                    <button data-cart-item-id="${item.cartItemId}" class="quantity-change-btn bg-gray-200 text-gray-800 rounded-l-lg px-3 py-1 font-bold hover:bg-gray-300" data-change="-1">-</button>
                                    <span class="bg-gray-100 px-4 py-1 border-y border-gray-300">${item.quantity}</span>
                                    <button data-cart-item-id="${item.cartItemId}" class="quantity-change-btn bg-gray-200 text-gray-800 rounded-r-lg px-3 py-1 font-bold hover:bg-gray-300" data-change="1">+</button>
                                </div>
                            </div>
                        </div>
                        <p class="font-semibold text-lg">${item.price * item.quantity} บาท</p>
                    </li>
                `).join('');

                const feesHTML = fees.map(fee => `
                    <li class="flex justify-between items-center text-sm text-gray-600 mb-1">
                        <span>${fee.name}</span>
                        <span>${fee.price} บาท</span>
                    </li>
                `).join('');

                const paymentMethodsHTML = paymentMethods.map(method => `
                     <div data-payment-id="${method.id}" class="payment-option p-4 rounded-lg cursor-pointer transition-all duration-200 bg-gray-100 border border-gray-300 hover:bg-gray-200">
                        <span class="font-semibold">${method.name}</span>
                        ${method.accountNumber ? `<p class="text-sm text-gray-600">เลขบัญชี: ${method.accountNumber}</p>` : ''}
                    </div>
                `).join('');

                cartContent.innerHTML = `
                    <ul class="divide-y divide-gray-200 max-h-60 overflow-y-auto mb-4">${itemsHTML}</ul>
                    ${fees.length > 0 ? `<div class="mt-4 pt-4 border-t border-dashed border-gray-300">
                        <h3 class="text-lg font-semibold mb-2">ค่าบริการเพิ่มเติม:</h3>
                        <ul class="mb-2">${feesHTML}</ul>
                    </div>` : ''}
                     <div class="mt-6 pt-4 border-t border-gray-200">
                        <h3 class="text-lg font-bold mb-2">ข้อมูลการจัดส่ง</h3>
                        <div class="flex flex-col gap-3">
                            <input type="text" name="contact_name" placeholder="ชื่อ-นามสกุล" class="p-3 border border-gray-300 rounded-lg" required />
                            <textarea name="contact_address" placeholder="ที่อยู่สำหรับจัดส่ง" rows="3" class="p-3 border border-gray-300 rounded-lg" required></textarea>
                            <input type="tel" name="contact_phone" placeholder="เบอร์โทรศัพท์" class="p-3 border border-gray-300 rounded-lg" required />
                        </div>
                    </div>
                    <div class="mt-6 pt-4 border-t border-gray-200">
                        <h3 class="text-lg font-bold mb-2">วิธีการชำระเงิน</h3>
                        <div id="payment-options-container" class="flex flex-col gap-2">${paymentMethodsHTML}</div>
                    </div>
                    <div id="payment-details" class="hidden mt-6 p-4 bg-white rounded-xl shadow-inner border border-dashed border-gray-300"></div>
                    <div class="mt-6 border-t pt-4">
                        <div class="flex justify-between items-center font-bold text-xl">
                            <span>ยอดรวมทั้งหมด:</span>
                            <span>${grandTotal} บาท</span>
                        </div>
                    </div>
                    <div id="checkout-status" class="mt-4"></div>
                `;
            };

            const updateCartCount = () => {
                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                if (totalItems > 0) {
                    cartCount.textContent = totalItems;
                    cartCount.classList.remove('hidden');
                } else {
                    cartCount.classList.add('hidden');
                }
            };

            const renderAdmin = () => {
                // Products
                adminProductList.innerHTML = '';
                products.forEach(p => {
                    const li = document.createElement('li');
                    li.className = "p-4 flex justify-between items-center";
                    li.innerHTML = `
                        <span class="font-medium">${p.name}</span>
                        <div class="flex gap-2">
                            <button data-id="${p.id}" class="edit-product-btn bg-blue-500 text-white px-3 py-1 rounded-lg font-bold hover:bg-blue-600">แก้ไข</button>
                            <button data-id="${p.id}" class="delete-product-btn bg-red-500 text-white px-3 py-1 rounded-lg font-bold hover:bg-red-600">ลบ</button>
                        </div>
                    `;
                    adminProductList.appendChild(li);
                });

                // Fees
                adminFeeList.innerHTML = '';
                fees.forEach(f => {
                    const li = document.createElement('li');
                    li.className = "p-4 flex justify-between items-center";
                    li.innerHTML = `
                        <span class="font-medium">${f.name}</span>
                        <span class="text-gray-600">${f.price} บาท</span>
                        <button data-id="${f.id}" class="delete-fee-btn bg-red-500 text-white px-3 py-1 rounded-lg font-bold hover:bg-red-600">ลบ</button>
                    `;
                    adminFeeList.appendChild(li);
                });

                // Payment Methods
                adminPaymentList.innerHTML = '';
                paymentMethods.forEach(p => {
                    const li = document.createElement('li');
                    li.className = "p-4 flex flex-col sm:flex-row justify-between items-start sm:items-center";
                    li.innerHTML = `
                        <div class="flex flex-col">
                            <span class="font-medium">${p.name}</span>
                            <span class="text-sm text-gray-600">${p.accountNumber || ''}</span>
                        </div>
                        <button data-id="${p.id}" class="delete-payment-btn mt-2 sm:mt-0 bg-red-500 text-white px-3 py-1 rounded-lg font-bold hover:bg-red-600">ลบ</button>
                    `;
                    adminPaymentList.appendChild(li);
                });
            };

            // --- MODAL FUNCTIONS ---
            const openModal = (modal) => modal.classList.remove('hidden');
            const closeModal = (modal) => modal.classList.add('hidden');

            // --- EVENT HANDLERS ---
            
            // Add/Update Product
            productForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const formData = new FormData(productForm);
                const id = formData.get('id');
                const productData = {
                    name: formData.get('name'),
                    price: Number(formData.get('price')),
                    sizes: formData.get('sizes') || 'One Size',
                    image: formData.get('image') || `https://placehold.co/400x300/cccccc/333333?text=${encodeURIComponent(formData.get('name'))}`
                };
                
                if (id) { // Editing
                    products = products.map(p => p.id == id ? { ...p, ...productData } : p);
                } else { // Adding
                    productData.id = products.length > 0 ? Math.max(...products.map(p => p.id)) + 1 : 1;
                    products.push(productData);
                }
                
                productForm.reset();
                productForm.querySelector('button[type="submit"]').textContent = 'เพิ่มสินค้า';
                document.getElementById('cancel-edit-btn').classList.add('hidden');
                document.getElementById('product-id').value = '';

                renderProducts();
                renderAdmin();
            });

            // Add Fee
            feeForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const formData = new FormData(feeForm);
                const newFee = {
                    id: fees.length > 0 ? Math.max(...fees.map(f => f.id)) + 1 : 1,
                    name: formData.get('name'),
                    price: Number(formData.get('price'))
                };
                fees.push(newFee);
                feeForm.reset();
                renderAdmin();
            });

            // Add Payment Method
            paymentMethodForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const formData = new FormData(paymentMethodForm);
                const newMethod = {
                    id: paymentMethods.length > 0 ? Math.max(...paymentMethods.map(p => p.id)) + 1 : 1,
                    type: 'bank',
                    name: formData.get('name'),
                    accountNumber: formData.get('accountNumber'),
                    qrCodeUrl: formData.get('qrCodeUrl')
                };
                paymentMethods.push(newMethod);
                paymentMethodForm.reset();
                renderAdmin();
            });


            // General click handler for dynamic buttons
            document.body.addEventListener('click', (e) => {
                // Add to Cart / Select Size buttons
                if (e.target.classList.contains('add-to-cart-btn')) {
                    const productId = e.target.dataset.productId;
                    const product = products.find(p => p.id == productId);
                    if (product.sizes && product.sizes !== 'One Size') {
                        currentProductForSizeSelection = product;
                        openSizeModal(product);
                    } else {
                        addToCart(product, 'One Size', 1);
                    }
                }
                // Edit Product button
                if (e.target.classList.contains('edit-product-btn')) {
                    const product = products.find(p => p.id == e.target.dataset.id);
                    document.getElementById('product-id').value = product.id;
                    document.getElementById('product-name').value = product.name;
                    document.getElementById('product-price').value = product.price;
                    document.getElementById('product-sizes').value = product.sizes;
                    document.getElementById('product-image').value = product.image;
                    productForm.querySelector('button[type="submit"]').textContent = 'บันทึกการแก้ไข';
                    document.getElementById('cancel-edit-btn').classList.remove('hidden');
                }
                 // Delete Product button
                if (e.target.classList.contains('delete-product-btn')) {
                    products = products.filter(p => p.id != e.target.dataset.id);
                    renderProducts();
                    renderAdmin();
                }
                // Delete Fee button
                if (e.target.classList.contains('delete-fee-btn')) {
                    fees = fees.filter(f => f.id != e.target.dataset.id);
                    renderAdmin();
                }
                // Delete Payment Method button
                if (e.target.classList.contains('delete-payment-btn')) {
                    paymentMethods = paymentMethods.filter(p => p.id != e.target.dataset.id);
                    renderAdmin();
                }
                // Size selection inside modal
                if(e.target.classList.contains('size-option-btn')) {
                    document.querySelectorAll('.size-option-btn').forEach(btn => btn.classList.remove('bg-indigo-500', 'text-white', 'border-indigo-500'));
                    e.target.classList.add('bg-indigo-500', 'text-white', 'border-indigo-500');
                    selectedSizeForModal = e.target.dataset.size;
                    document.getElementById('confirm-add-to-cart-btn').disabled = false;
                }
                // Cart quantity change
                if(e.target.classList.contains('quantity-change-btn')) {
                    const cartItemId = e.target.dataset.cartItemId;
                    const change = parseInt(e.target.dataset.change);
                    const item = cart.find(i => i.cartItemId === cartItemId);
                    if(item) {
                       const newQuantity = item.quantity + change;
                       if (newQuantity > 0) {
                           item.quantity = newQuantity;
                           renderCart();
                           updateCartCount();
                       } else { // remove if quantity is 0
                           cart = cart.filter(i => i.cartItemId !== cartItemId);
                           renderCart();
                           updateCartCount();
                       }
                    }
                }
                 // Payment method selection
                if(e.target.closest('.payment-option')) {
                    const paymentDiv = e.target.closest('.payment-option');
                    const paymentId = paymentDiv.dataset.paymentId;
                    const method = paymentMethods.find(p => p.id == paymentId);
                    
                    document.querySelectorAll('.payment-option').forEach(el => el.classList.remove('bg-indigo-100', 'border-indigo-500', 'border-2'));
                    paymentDiv.classList.add('bg-indigo-100', 'border-indigo-500', 'border-2');

                    const detailsContainer = document.getElementById('payment-details');
                    detailsContainer.innerHTML = `
                        <h4 class="font-bold text-center text-xl mb-2">รายละเอียดการชำระเงิน</h4>
                        <p class="text-center">โอนเงินไปยัง:</p>
                        <p class="text-center font-semibold text-lg">${method.name}</p>
                        ${method.accountNumber ? `<p class="text-center text-sm text-gray-600">เลขบัญชี: <span class="font-mono">${method.accountNumber}</span></p>` : ''}
                        ${method.qrCodeUrl ? `<div class="mt-4 flex justify-center"><img src="${method.qrCodeUrl}" alt="QR Code" class="w-48 h-48 rounded-lg border-2 border-gray-200" /></div>` : ''}
                        <div class="mt-6">
                            <p class="text-sm font-semibold mb-1">อัปโหลดสลิปหรือหลักฐานการโอนเงิน:</p>
                            <input type="file" id="payment-slip-upload" accept="image/*, .pdf" class="w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100">
                            <p id="slip-upload-status" class="text-xs text-green-600 mt-2"></p>
                        </div>
                    `;
                    detailsContainer.classList.remove('hidden');
                }
            });

             // Cancel Edit
            document.getElementById('cancel-edit-btn').addEventListener('click', () => {
                productForm.reset();
                productForm.querySelector('button[type="submit"]').textContent = 'เพิ่มสินค้า';
                document.getElementById('cancel-edit-btn').classList.add('hidden');
                document.getElementById('product-id').value = '';
            });

            // Confirm Add to Cart from Size Modal
            document.getElementById('confirm-add-to-cart-btn').addEventListener('click', () => {
                const quantity = parseInt(document.getElementById('size-modal-quantity').value) || 1;
                addToCart(currentProductForSizeSelection, selectedSizeForModal, quantity);
                closeModal(sizeModal);
            });
            
            const addToCart = (product, size, quantity) => {
                const cartItemId = `${product.id}-${size}`;
                const existingItem = cart.find(item => item.cartItemId === cartItemId);

                if (existingItem) {
                    existingItem.quantity += quantity;
                } else {
                    cart.push({ ...product, cartItemId, quantity, selectedSize: size });
                }
                updateCartCount();
                // Optionally show a confirmation message
            };

            const openSizeModal = (product) => {
                document.getElementById('size-modal-title').textContent = `เลือกขนาด: ${product.name}`;
                const sizeOptionsContainer = document.getElementById('size-options');
                sizeOptionsContainer.innerHTML = '';
                product.sizes.split(',').forEach(size => {
                    sizeOptionsContainer.innerHTML += `
                        <button data-size="${size}" class="size-option-btn p-3 rounded-lg border-2 font-bold transition-colors bg-gray-200 text-gray-800 border-gray-300 hover:bg-gray-300">
                            ${size}
                        </button>`;
                });
                document.getElementById('size-modal-quantity').value = 1;
                document.getElementById('confirm-add-to-cart-btn').disabled = true;
                selectedSizeForModal = null;
                openModal(sizeModal);
            };

            // Login/Logout
            loginForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const username = document.getElementById('username').value;
                const password = document.getElementById('password').value;
                if (username === 'lamtoey728' && password === 'E99h9999') {
                    isLoggedIn = true;
                    loginButton.classList.add('hidden');
                    logoutButton.classList.remove('hidden');
                    adminPanel.classList.remove('hidden');
                    closeModal(loginModal);
                    renderAdmin();
                    document.getElementById('login-error').textContent = '';
                } else {
                    document.getElementById('login-error').textContent = 'ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง';
                }
            });

            logoutButton.addEventListener('click', () => {
                isLoggedIn = false;
                loginButton.classList.remove('hidden');
                logoutButton.classList.add('hidden');
                adminPanel.classList.add('hidden');
            });

            // Modal Controls
            cartButton.addEventListener('click', () => {
                renderCart();
                openModal(cartModal);
            });
            loginButton.addEventListener('click', () => openModal(loginModal));
            document.querySelectorAll('.close-modal-btn').forEach(btn => {
                btn.addEventListener('click', () => {
                    modals.forEach(closeModal);
                });
            });

            // --- INITIALIZATION ---
            renderProducts();
        });
    </script>

</body>
</html>
